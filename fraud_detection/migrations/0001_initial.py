# Generated by Django 5.2.4 on 2025-07-26 18:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_code', models.CharField(max_length=10, unique=True, verbose_name='Code Banque')),
                ('bank_name', models.CharField(blank=True, max_length=100, verbose_name='Nom Banque')),
                ('total_transactions', models.IntegerField(default=0)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('unique_clients', models.IntegerField(default=0)),
                ('fraud_transactions', models.IntegerField(default=0)),
                ('high_risk_transactions', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Banque',
                'verbose_name_plural': 'Banques',
                'ordering': ['-total_transactions'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(max_length=50, unique=True, verbose_name='ID Client')),
                ('total_transactions_sent', models.IntegerField(default=0)),
                ('total_transactions_received', models.IntegerField(default=0)),
                ('total_amount_sent', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_amount_received', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('avg_transaction_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('most_common_transaction_type', models.CharField(blank=True, max_length=3)),
                ('unique_banks_used', models.IntegerField(default=0)),
                ('self_transfers_count', models.IntegerField(default=0)),
                ('failed_transactions_count', models.IntegerField(default=0)),
                ('fraud_transactions_count', models.IntegerField(default=0)),
                ('most_active_hour', models.IntegerField(blank=True, null=True)),
                ('most_active_day', models.IntegerField(blank=True, null=True)),
                ('risk_score', models.FloatField(default=0.0)),
                ('risk_level', models.CharField(choices=[('NORMAL', 'Normal'), ('WATCH', 'Surveillance'), ('SUSPECT', 'Suspect')], default='NORMAL', max_length=10)),
                ('claude_risk_assessment', models.TextField(blank=True, verbose_name='Évaluation IA')),
                ('claude_risk_level', models.CharField(choices=[('NORMAL', 'Normal'), ('WATCH', 'Surveillance'), ('SUSPECT', 'Suspect')], default='NORMAL', max_length=15, verbose_name='Niveau Risque IA')),
                ('claude_last_analyzed', models.DateTimeField(blank=True, null=True)),
                ('first_transaction_date', models.DateTimeField(blank=True, null=True)),
                ('last_transaction_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['-fraud_transactions_count', '-total_transactions_sent'],
            },
        ),
        migrations.CreateModel(
            name='DailyInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('claude_summary', models.TextField(verbose_name='Résumé IA')),
                ('fraud_count', models.IntegerField(default=0)),
                ('high_priority_count', models.IntegerField(default=0)),
                ('total_amount_fraud', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('top_risk_clients', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Insight Quotidien',
                'verbose_name_plural': 'Insights Quotidiens',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('analyst', 'Analyste Fraude'), ('viewer', 'Lecture Seule')], default='viewer', max_length=10)),
                ('department', models.CharField(blank=True, max_length=50)),
                ('can_upload_data', models.BooleanField(default=False)),
                ('can_run_analysis', models.BooleanField(default=False)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RawTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trx', models.CharField(max_length=100, unique=True, verbose_name='ID Transaction')),
                ('trx_time', models.CharField(max_length=50, verbose_name='Heure Transaction')),
                ('mls', models.BigIntegerField(verbose_name='Milliseconds')),
                ('trx_type', models.CharField(choices=[('TRF', 'Transfert interbancaire'), ('RT', 'Retrait'), ('RCD', 'Recharge'), ('PF', 'Paiement de facture')], max_length=3, verbose_name='Type')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Montant')),
                ('client_i', models.CharField(max_length=50, verbose_name='Client Source')),
                ('client_b', models.CharField(max_length=50, verbose_name='Client Destination')),
                ('bank_i', models.CharField(max_length=10, verbose_name='Banque Source')),
                ('bank_b', models.CharField(max_length=10, verbose_name='Banque Destination')),
                ('etat', models.CharField(choices=[('OK', 'Transaction réussie'), ('KO', 'Échec de traitement'), ('ATT', 'En attente ou en traitement')], max_length=3, verbose_name='État')),
                ('ml_is_fraud', models.BooleanField(default=False, verbose_name='Fraude Détectée')),
                ('ml_feature_importance', models.JSONField(blank=True, null=True, verbose_name='Importance Features')),
                ('ml_processed_at', models.DateTimeField(blank=True, null=True)),
                ('claude_explanation', models.TextField(blank=True, verbose_name='Explication IA')),
                ('claude_analyzed_at', models.DateTimeField(blank=True, null=True)),
                ('claude_priority_level', models.CharField(blank=True, choices=[('LOW', 'Faible'), ('MEDIUM', 'Moyen'), ('HIGH', 'Élevé'), ('URGENT', 'Urgent')], max_length=10, verbose_name='Niveau Priorité')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='UploadSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_rows', models.IntegerField(default=0)),
                ('processed_rows', models.IntegerField(default=0)),
                ('fraud_detected', models.IntegerField(default=0)),
                ('claude_analyses_generated', models.IntegerField(default=0)),
                ('status', models.CharField(default='PROCESSING', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
    ]
